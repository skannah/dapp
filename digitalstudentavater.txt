In this smart contract, we define a struct Avatar that represents the digital student avatar, containing attributes such as name, age, school, and an array courses to store the enrolled courses.

The avatars mapping is used to associate each user's address with their respective avatar.

The createAvatar function allows users to create their avatar by providing a name, age, and school. The function checks if the avatar already exists for the user before creating a new one.

The enrollCourse function enables users to enroll in courses by adding the course name to the courses array of their avatar. The function checks if the avatar exists before enrolling the user.

The getAvatar function allows users to retrieve the details of their avatar by providing their address. It returns the name, age, school, and enrolled courses associated with the avatar.

Events are emitted whenever an avatar is created or a course is enrolled, providing information that can be used by external applications to track the changes.

Please note that this is a simplified example, and in a real-world scenario, you might want to add more functionalities, access controls, and error handling as per your specific requirements.
